# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: |
    # Download a recent, static build of clang-format
    wget --no-verbose https://github.com/angular/clang-format/raw/master/bin/linux_x64/clang-format
    chmod a+x clang-format
    # Make sure it identifies itself
    ./clang-format --version
    # Parse full lines
    export IFS=$'\n'
    # For each file in repository with name ending with ".cpp" ...
    for file in $(git ls-files | grep \\.cpp$); do
        # ... print its name, in case clang-format throws some errors ...
        echo Formatting "$file"
        # ... and format it in place.
        ./clang-format -style=file -i "$file"
    done
    # Just some visual separation
    echo -e "\\n\\n\\n\\tChecking diff...\\n\\n\\n"
    # Set error mode. Makes bash bail on first non-zero exit code
    set -e
    # Print diff, if any and report with exit code.
    git diff --exit-code
    # When no diff present, provide status.
    echo -e "\\tStyle is fine"
  displayName: 'clang-format'
